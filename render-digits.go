package zeichenwerk

var digits = map[rune][]string{
	'0': {
		"╭──╮",
		"│  │",
		"╰──╯",
	},
	'1': {
		" ╶╮ ",
		"  │ ",
		" ╶┴╴ ",
	},
	'2': {
		"╭──╮",
		"╭──╯",
		"└──╴",
	},
	'3': {
		"╶──╮",
		" ──┤",
		"╶──╯",
	},
	'4': {
		"╷  ╷",
		"╰──┤",
		"   ╵",
	},
	'5': {
		"┌──╴",
		"╰──╮",
		"╰──┘",
	},
	'6': {
		"╭──╮",
		"├──╮",
		"╰──╯",
	},
	'7': {
		"╶──┐",
		"   │",
		"   ╵",
	},
	'8': {
		"╭──╮",
		"├──┤",
		"╰──╯",
	},
	'9': {
		"╭──╮",
		"╰──┤",
		"╰──╯",
	},
	'A': {
		"╭──╮",
		"├──┤",
		"╵  ╵",
	},
	'B': {
		"┌─╮ ",
		"├─┴╮",
		"└──╯",
	},
	'C': {
		"╭──╮",
		"│   ",
		"╰──╯",
	},
	'D': {
		"┌──╮",
		"│  │",
		"└──╯",
	},
	'E': {
		"┌──╴",
		"├── ",
		"└──╴",
	},
	'F': {
		"┌──╴",
		"├── ",
		"╵   ",
	},
	'#': {
		"    ",
		" ┼┼ ",
		" ┼┼ ",
	},
	',': {
		"   ",
		"   ",
		" , ",
	},
	'.': {
		"   ",
		"   ",
		" ● ",
	},
	':': {
		" ○ ",
		"   ",
		" ○ ",
	},
	' ': {
		"   ",
		"   ",
		"   ",
	},
}

func (r *Renderer) renderDigits(widget *Digits, x, y, w, h int) {
	cx := x
	for _, ch := range widget.Text {
		m, found := digits[ch]
		if !found {
			continue
		}
		for i, row := range m {
			r.text(cx, y+i, row, 0)
		}
		cx += len([]rune(m[0]))
	}
}
